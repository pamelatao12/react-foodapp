{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/web/src/eventCard.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./eventCard.module.css\";\nimport Popover, { ArrowContainer } from \"react-tiny-popover\";\n\nconst EventCard = () => {\n  const images = [\"food1.jpg\", \"food2.jpg\", \"food3.jpg\", \"food4.jpg\", \"food5.jpg\", \"food6.jpg\", \"food7.jpg\", \"food8.jpg\", \"food9.jpg\"];\n  const popoverBody = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"hi\");\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const changeBackgroundImg = () => {\n    return images[Math.floor(Math.random() * images.length)];\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.eventCardWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.topHalf,\n    style: {\n      backgroundImage: `url(\"/${changeBackgroundImg()}\")`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.eventDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles.dateHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"MONDAY\"), React.createElement(\"p\", {\n    className: styles.month,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"May\"), React.createElement(\"p\", {\n    className: styles.day,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"10\")), React.createElement(\"div\", {\n    className: styles.eventDetailsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles.eventName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Dinner with friends\"), React.createElement(\"p\", {\n    className: styles.eventDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uD83D\\uDD51 Friday, 17th August | 06:30 PM - 08:30 PM\"), React.createElement(\"p\", {\n    className: styles.eventDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\uD83D\\uDCCD 1234 56th St, New York, NY\"), React.createElement(\"p\", {\n    className: styles.eventDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\uD83D\\uDCDD Notes\")), React.createElement(\"div\", {\n    className: styles.eventActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.eventActionBtn,\n    onClick: setIsFriendsPopoverOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Add friends!\"), React.createElement(\"button\", {\n    className: styles.eventActionBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Vote\"), React.createElement(Popover, {\n    className: \"popoverStyle\",\n    isOpen: isFriendsPopoverOpen,\n    position: \"bottom\",\n    padding: 10,\n    onClickOutside: () => setIsFriendsPopoverOpen(false),\n    content: ({\n      position,\n      targetRect,\n      popoverRect\n    }) => React.createElement(ArrowContainer, {\n      position: position,\n      targetRect: targetRect,\n      popoverRect: popoverRect,\n      arrowColor: \"#f7f7f7\",\n      arrowSize: 10,\n      arrowStyle: {\n        borderBottom: \"10px solid darkgrey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popoverContent\",\n      onClick: () => setIsPopoverOpen(!isPopoverOpen),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Add to upcoming events:\"), React.createElement(\"ul\", {\n      className: \"eventsListPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Event 1\"), React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Event 2\"), React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Event 3\"), React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Event 1\"), React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Event 2\"), React.createElement(\"li\", {\n      className: \"eventPopover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Event 3\")))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default EventCard;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/eventCard.js"],"names":["React","useState","styles","Popover","ArrowContainer","EventCard","images","popoverBody","isPopoverOpen","setIsPopoverOpen","changeBackgroundImg","Math","floor","random","length","eventCardWrapper","topHalf","backgroundImage","eventDate","dateHeader","month","day","eventDetailsWrapper","eventName","eventDetails","eventActions","eventActionBtn","setIsFriendsPopoverOpen","isFriendsPopoverOpen","position","targetRect","popoverRect","borderBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./eventCard.module.css\";\nimport Popover, { ArrowContainer } from \"react-tiny-popover\";\n\nconst EventCard = () => {\n  const images = [\n    \"food1.jpg\",\n    \"food2.jpg\",\n    \"food3.jpg\",\n    \"food4.jpg\",\n    \"food5.jpg\",\n    \"food6.jpg\",\n    \"food7.jpg\",\n    \"food8.jpg\",\n    \"food9.jpg\"\n  ];\n\n  const popoverBody = <div>hi</div>;\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const changeBackgroundImg = () => {\n    return images[Math.floor(Math.random() * images.length)];\n  };\n  return (\n    <div className={styles.eventCardWrapper}>\n      <div\n        className={styles.topHalf}\n        style={{ backgroundImage: `url(\"/${changeBackgroundImg()}\")` }}\n      ></div>\n      <div className={styles.eventDate}>\n        <h1 className={styles.dateHeader}>MONDAY</h1>\n        <p className={styles.month}>May</p>\n        <p className={styles.day}>10</p>\n      </div>\n      <div className={styles.eventDetailsWrapper}>\n        <h1 className={styles.eventName}>Dinner with friends</h1>\n        <p className={styles.eventDetails}>\n          &#128337; Friday, 17th August | 06:30 PM - 08:30 PM\n        </p>\n        <p className={styles.eventDetails}>\n          &#128205; 1234 56th St, New York, NY\n        </p>\n        <p className={styles.eventDetails}>&#128221; Notes</p>\n      </div>\n      <div className={styles.eventActions}>\n        <button\n          className={styles.eventActionBtn}\n          onClick={setIsFriendsPopoverOpen(true)}\n        >\n          Add friends!\n        </button>\n        <button className={styles.eventActionBtn}>Vote</button>\n        <Popover\n          className=\"popoverStyle\"\n          isOpen={isFriendsPopoverOpen}\n          position={\"bottom\"}\n          padding={10}\n          onClickOutside={() => setIsFriendsPopoverOpen(false)}\n          content={({ position, targetRect, popoverRect }) => (\n            <ArrowContainer\n              position={position}\n              targetRect={targetRect}\n              popoverRect={popoverRect}\n              arrowColor={\"#f7f7f7\"}\n              arrowSize={10}\n              arrowStyle={{\n                borderBottom: \"10px solid darkgrey\"\n              }}\n            >\n              <div\n                className=\"popoverContent\"\n                onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n              >\n                <h2>Add to upcoming events:</h2>\n                <ul className=\"eventsListPopover\">\n                  <li className=\"eventPopover\">Event 1</li>\n                  <li className=\"eventPopover\">Event 2</li>\n                  <li className=\"eventPopover\">Event 3</li>\n                  <li className=\"eventPopover\">Event 1</li>\n                  <li className=\"eventPopover\">Event 2</li>\n                  <li className=\"eventPopover\">Event 3</li>\n                </ul>\n              </div>\n            </ArrowContainer>\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EventCard;\n"]},"metadata":{},"sourceType":"module"}