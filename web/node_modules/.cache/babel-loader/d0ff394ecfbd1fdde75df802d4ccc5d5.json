{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/web/src/restaurantCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\nimport Popover from \"react-popover\";\n\nconst RestaurantCard = ({\n  details,\n  index\n}) => {\n  const [restaurantReview, setReviews] = useState(details.reviews);\n  const [loading, setLoading] = useState(true); // const fetchReviews = async () => {\n  //   try {\n  //     console.log(\"attempting to fetch\", index);\n  //     const response = await fetch(\n  //       `http://localhost:4000/reviews?id=${details.alias}`,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Accept: \"application/json\"\n  //         }\n  //       }\n  //     );\n  //     const responseJson = await response.json();\n  //     setLoading(false);\n  //     console.log(\"reviews received for\", index, responseJson);\n  //     setReviews(responseJson.reviews);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //\n  // useEffect(() => {\n  //   if (!restaurantReview) {\n  //     fetchReviews();\n  //   }\n  // }, []);\n\n  const popoverBody = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"hi\");\n  const triggerElement = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"titleButtonWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"eventTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, index, \". \", details.name), React.createElement(\"div\", {\n    className: \"restaurantActionButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Popover, {\n    body: popoverBody,\n    isOpen: true,\n    place: \"below\",\n    target: React.createElement(\"button\", {\n      className: \"addButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"+\"),\n    onOuterAction: () => {\n      this.isOpen = false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"addButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    className: \"heartButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u2665\"))), React.createElement(\"div\", {\n    className: \"ratingAddressWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    restaurantRating: details.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"reviewCount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, details.review_count)), React.createElement(\"div\", {\n    className: \"priceTags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, details.price), details.price && React.createElement(\"div\", {\n    className: \"separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, String.fromCharCode(5867)), React.createElement(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, details.categories[0].title))), React.createElement(\"ul\", {\n    className: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, details.phone && \"(\" + details.phone.substring(2, 5) + \") \" + details.phone.substring(5, 8) + \"-\" + details.phone.substring(8)), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, details.location.address1), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, details.location.city))), React.createElement(\"div\", {\n    className: \"seeReviewsButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Reviews \\u25BF\"));\n  return React.createElement(Collapsible, {\n    classParentString: \"collapsibleRestaurant\",\n    trigger: triggerElement,\n    triggerTagName: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"collapsibleRestaurantContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, restaurantReview[0].text), restaurantReview[1] && React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, restaurantReview[1].text), \" \", restaurantReview[2] && React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, restaurantReview[2].text), React.createElement(\"a\", {\n    className: \"yelpLinkBtn\",\n    target: \"_blank\",\n    href: details.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"See more on Yelp\")));\n};\n\nexport default RestaurantCard;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/restaurantCard.js"],"names":["React","useState","useEffect","Collapsible","Rating","Popover","RestaurantCard","details","index","restaurantReview","setReviews","reviews","loading","setLoading","popoverBody","triggerElement","name","isOpen","rating","review_count","price","String","fromCharCode","categories","title","phone","substring","location","address1","city","text","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\nimport Popover from \"react-popover\";\n\nconst RestaurantCard = ({ details, index }) => {\n  const [restaurantReview, setReviews] = useState(details.reviews);\n  const [loading, setLoading] = useState(true);\n\n  // const fetchReviews = async () => {\n  //   try {\n  //     console.log(\"attempting to fetch\", index);\n  //     const response = await fetch(\n  //       `http://localhost:4000/reviews?id=${details.alias}`,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Accept: \"application/json\"\n  //         }\n  //       }\n  //     );\n  //     const responseJson = await response.json();\n  //     setLoading(false);\n  //     console.log(\"reviews received for\", index, responseJson);\n  //     setReviews(responseJson.reviews);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //\n  // useEffect(() => {\n  //   if (!restaurantReview) {\n  //     fetchReviews();\n  //   }\n  // }, []);\n\n  const popoverBody = <div>hi</div>;\n\n  const triggerElement = (\n    <>\n      <div className=\"titleButtonWrapper\">\n        <h2 className=\"eventTitle\">\n          {index}. {details.name}\n        </h2>\n        <div className=\"restaurantActionButtons\">\n          <Popover\n            body={popoverBody}\n            isOpen={true}\n            place=\"below\"\n            target={<button className=\"addButton\">+</button>}\n            onOuterAction={() => {\n              this.isOpen = false;\n            }}\n          />\n          <button className=\"addButton\">+</button>\n          <button className=\"heartButton\">&#9829;</button>\n        </div>\n      </div>\n      <div className=\"ratingAddressWrapper\">\n        <div>\n          <div className=\"rating\">\n            <Rating restaurantRating={details.rating} />\n            <div className=\"reviewCount\">{details.review_count}</div>\n          </div>\n          <div className=\"priceTags\">\n            <div className=\"price\">{details.price}</div>\n            {details.price && (\n              <div className=\"separator\">{String.fromCharCode(5867)}</div>\n            )}\n            {/* todo: display categories separated by comma. use join(\", \")? */}\n            <div className=\"tags\">{details.categories[0].title}</div>\n          </div>\n        </div>\n        <ul className=\"address\">\n          <li className=\"addressList\">\n            {details.phone &&\n              \"(\" +\n                details.phone.substring(2, 5) +\n                \") \" +\n                details.phone.substring(5, 8) +\n                \"-\" +\n                details.phone.substring(8)}\n          </li>\n          <li className=\"addressList\">{details.location.address1}</li>\n          <li className=\"addressList\">{details.location.city}</li>\n          {/*use zip code to get neighborhood*/}\n        </ul>\n      </div>\n      <div className=\"seeReviewsButton\">Reviews &#9663;</div>\n    </>\n  );\n\n  return (\n    <Collapsible\n      classParentString=\"collapsibleRestaurant\"\n      trigger={triggerElement}\n      triggerTagName=\"div\"\n    >\n      <div className=\"collapsibleRestaurantContent\">\n        <p className=\"reviewCollapsibleContent\">{restaurantReview[0].text}</p>\n        {restaurantReview[1] && (\n          <p className=\"reviewCollapsibleContent\">{restaurantReview[1].text}</p>\n        )}{\" \"}\n        {restaurantReview[2] && (\n          <p className=\"reviewCollapsibleContent\">{restaurantReview[2].text}</p>\n        )}\n        <a className=\"yelpLinkBtn\" target=\"_blank\" href={details.url}>\n          See more on Yelp\n        </a>\n      </div>\n    </Collapsible>\n  );\n};\n\nexport default RestaurantCard;\n"]},"metadata":{},"sourceType":"module"}