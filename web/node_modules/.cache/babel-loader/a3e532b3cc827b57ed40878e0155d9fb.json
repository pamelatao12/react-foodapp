{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/web/src/restaurantCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\nimport Popover, { ArrowContainer } from \"react-tiny-popover\";\n\nconst RestaurantCard = ({\n  details,\n  index\n}) => {\n  const [restaurantReview, setReviews] = useState(details.reviews);\n  const [loading, setLoading] = useState(true); // const fetchReviews = async () => {\n  //   try {\n  //     console.log(\"attempting to fetch\", index);\n  //     const response = await fetch(\n  //       `http://localhost:4000/reviews?id=${details.alias}`,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Accept: \"application/json\"\n  //         }\n  //       }\n  //     );\n  //     const responseJson = await response.json();\n  //     setLoading(false);\n  //     console.log(\"reviews received for\", index, responseJson);\n  //     setReviews(responseJson.reviews);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //\n  // useEffect(() => {\n  //   if (!restaurantReview) {\n  //     fetchReviews();\n  //   }\n  // }, []);\n\n  const restCategories = () => {\n    let categories = \"\";\n    details.categories.forEach(category => {\n      categories += `, ${category.title}`;\n    });\n    console.log(\"categories: \", categories);\n    return categories;\n  };\n\n  const popoverBody = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"hi\");\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const triggerElement = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"titleButtonWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"eventTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, index, \". \", details.name)), React.createElement(\"div\", {\n    className: \"ratingAddressWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    restaurantRating: details.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"reviewCount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, details.review_count)), React.createElement(\"div\", {\n    className: \"priceTags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, details.price), details.price && React.createElement(\"div\", {\n    className: \"separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, String.fromCharCode(5867)), React.createElement(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, restCategories()))), React.createElement(\"ul\", {\n    className: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, details.phone && \"(\" + details.phone.substring(2, 5) + \") \" + details.phone.substring(5, 8) + \"-\" + details.phone.substring(8)), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, details.location.address1), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, details.location.city))), React.createElement(\"div\", {\n    className: \"seeReviewsButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Reviews \\u25BF\"));\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"restaurantActionButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Popover, {\n    className: \"popoverStyle\",\n    isOpen: isPopoverOpen,\n    position: \"bottom\",\n    padding: 10,\n    onClickOutside: () => setIsPopoverOpen(false),\n    content: ({\n      position,\n      targetRect,\n      popoverRect\n    }) => React.createElement(ArrowContainer, {\n      position: position,\n      targetRect: targetRect,\n      popoverRect: popoverRect,\n      arrowColor: \"#f7f7f7\",\n      arrowSize: 10,\n      arrowStyle: {\n        borderBottom: \"10px solid darkgrey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popoverContent\",\n      onClick: () => setIsPopoverOpen(!isPopoverOpen),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Hi! I'm popover content. Here's my position: \", position, \".\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"addButton\",\n    onClick: () => setIsPopoverOpen(!isPopoverOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"+\")), React.createElement(\"button\", {\n    className: \"heartButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"\\u2665\")), React.createElement(Collapsible, {\n    classParentString: \"collapsibleRestaurant\",\n    trigger: triggerElement,\n    triggerTagName: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"collapsibleRestaurantContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, restaurantReview[0].text), restaurantReview[1] && React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, restaurantReview[1].text), \" \", restaurantReview[2] && React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, restaurantReview[2].text), React.createElement(\"a\", {\n    className: \"yelpLinkBtn\",\n    target: \"_blank\",\n    href: details.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"See more on Yelp\"))));\n};\n\nexport default RestaurantCard;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/restaurantCard.js"],"names":["React","useState","useEffect","Collapsible","Rating","Popover","ArrowContainer","RestaurantCard","details","index","restaurantReview","setReviews","reviews","loading","setLoading","restCategories","categories","forEach","category","title","console","log","popoverBody","isPopoverOpen","setIsPopoverOpen","triggerElement","name","rating","review_count","price","String","fromCharCode","phone","substring","location","address1","city","position","targetRect","popoverRect","borderBottom","text","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\nimport Popover, { ArrowContainer } from \"react-tiny-popover\";\n\nconst RestaurantCard = ({ details, index }) => {\n  const [restaurantReview, setReviews] = useState(details.reviews);\n  const [loading, setLoading] = useState(true);\n\n  // const fetchReviews = async () => {\n  //   try {\n  //     console.log(\"attempting to fetch\", index);\n  //     const response = await fetch(\n  //       `http://localhost:4000/reviews?id=${details.alias}`,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Accept: \"application/json\"\n  //         }\n  //       }\n  //     );\n  //     const responseJson = await response.json();\n  //     setLoading(false);\n  //     console.log(\"reviews received for\", index, responseJson);\n  //     setReviews(responseJson.reviews);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //\n  // useEffect(() => {\n  //   if (!restaurantReview) {\n  //     fetchReviews();\n  //   }\n  // }, []);\n  const restCategories = () => {\n    let categories = \"\";\n    details.categories.forEach(category => {\n      categories += `, ${category.title}`;\n    });\n    console.log(\"categories: \", categories);\n    return categories;\n  };\n\n  const popoverBody = <div>hi</div>;\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const triggerElement = (\n    <>\n      <div className=\"titleButtonWrapper\">\n        <h2 className=\"eventTitle\">\n          {index}. {details.name}\n        </h2>\n      </div>\n      <div className=\"ratingAddressWrapper\">\n        <div>\n          <div className=\"rating\">\n            <Rating restaurantRating={details.rating} />\n            <div className=\"reviewCount\">{details.review_count}</div>\n          </div>\n          <div className=\"priceTags\">\n            <div className=\"price\">{details.price}</div>\n            {details.price && (\n              <div className=\"separator\">{String.fromCharCode(5867)}</div>\n            )}\n            {/* todo: display categories separated by comma. use join(\", \")? */}\n            <div className=\"tags\">{restCategories()}</div>\n          </div>\n        </div>\n        <ul className=\"address\">\n          <li className=\"addressList\">\n            {details.phone &&\n              \"(\" +\n                details.phone.substring(2, 5) +\n                \") \" +\n                details.phone.substring(5, 8) +\n                \"-\" +\n                details.phone.substring(8)}\n          </li>\n          <li className=\"addressList\">{details.location.address1}</li>\n          <li className=\"addressList\">{details.location.city}</li>\n          {/*use zip code to get neighborhood*/}\n        </ul>\n      </div>\n      <div className=\"seeReviewsButton\">Reviews &#9663;</div>\n    </>\n  );\n\n  return (\n    <>\n      <div className=\"restaurantActionButtons\">\n        <Popover\n          className=\"popoverStyle\"\n          isOpen={isPopoverOpen}\n          position={\"bottom\"}\n          padding={10}\n          onClickOutside={() => setIsPopoverOpen(false)}\n          content={({ position, targetRect, popoverRect }) => (\n            <ArrowContainer\n              position={position}\n              targetRect={targetRect}\n              popoverRect={popoverRect}\n              arrowColor={\"#f7f7f7\"}\n              arrowSize={10}\n              arrowStyle={{\n                borderBottom: \"10px solid darkgrey\"\n              }}\n            >\n              <div\n                className=\"popoverContent\"\n                onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n              >\n                Hi! I'm popover content. Here's my position: {position}.\n              </div>\n            </ArrowContainer>\n          )}\n        >\n          <button\n            className=\"addButton\"\n            onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n          >\n            +\n          </button>\n        </Popover>\n\n        <button className=\"heartButton\">&#9829;</button>\n      </div>\n      <Collapsible\n        classParentString=\"collapsibleRestaurant\"\n        trigger={triggerElement}\n        triggerTagName=\"div\"\n      >\n        <div className=\"collapsibleRestaurantContent\">\n          <p className=\"reviewCollapsibleContent\">{restaurantReview[0].text}</p>\n          {restaurantReview[1] && (\n            <p className=\"reviewCollapsibleContent\">\n              {restaurantReview[1].text}\n            </p>\n          )}{\" \"}\n          {restaurantReview[2] && (\n            <p className=\"reviewCollapsibleContent\">\n              {restaurantReview[2].text}\n            </p>\n          )}\n          <a className=\"yelpLinkBtn\" target=\"_blank\" href={details.url}>\n            See more on Yelp\n          </a>\n        </div>\n      </Collapsible>\n    </>\n  );\n};\n\nexport default RestaurantCard;\n"]},"metadata":{},"sourceType":"module"}