{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/src/carousel.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport CarouselSet from \"./carouselSet\";\nimport \"./carousel.css\";\nimport Slide from \"./slide\";\n\nconst Carousel = () => {\n  const [state, setState] = useState({\n    restaurantSet: [[\"rest1\", \"rest2\", \"rest3\"], [\"rest4\", \"rest5\", \"rest6\"], [\"rest7\", \"rest8\", \"rest9\"]],\n    index: 0,\n    direction: null\n  });\n\n  const nextSet = () => {\n    // set state\n    setState(state => ({ ...state,\n      index: (state.index + 1) % state.restaurantSet.length,\n      direction: \"next-fake\"\n    }));\n  };\n\n  const prevSet = () => {\n    // set state\n    setState(state => ({ ...state,\n      index: (state.index - 1 + state.restaurantSet.length) % state.restaurantSet.length,\n      direction: \"prev-fake\"\n    }));\n  };\n\n  const transitionClassName = state.direction === \"next-fake\" ? \"setTransition\" : state.direction === \"prev-fake\" ? \"prevTransition\" : \"\";\n  console.log(\"transitionClassName\", transitionClassName);\n  useEffect(() => {\n    if (state.direction === \"next-fake\" || state.direction === \"prev-fake\") {\n      console.log(\"set state to next or prev\");\n      setState(state => ({ ...state,\n        direction: state.direction === \"next-fake\" ? \"next\" : \"prev\"\n      }));\n    } else if (state.direction === \"next\" || state.direction === \"prev\") {\n      console.log(\"set state to null\");\n      setState(state => ({ ...state,\n        direction: null\n      }));\n    }\n  }, [state.direction]);\n  return React.createElement(\"div\", {\n    className: \"carousel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Suggested for You\"), React.createElement(\"button\", {\n    className: \"prevCarouselBtn\",\n    onClick: prevSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u2039\"), React.createElement(\"button\", {\n    className: \"nextCarouselBtn\",\n    onClick: nextSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u203A\"), React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CSSTransition, {\n    key: state.index,\n    timeout: 1000,\n    classNames: transitionClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"carouselSet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CarouselSet, {\n    viewSet: state.restaurantSet[state.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))));\n};\n\nexport default Carousel;","map":{"version":3,"sources":["/Users/pamelatao/my-app/src/carousel.js"],"names":["React","Component","useState","useEffect","CSSTransition","TransitionGroup","CarouselSet","Slide","Carousel","state","setState","restaurantSet","index","direction","nextSet","length","prevSet","transitionClassName","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AACjCS,IAAAA,aAAa,EAAE,CACb,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CADa,EAEb,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAFa,EAGb,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAHa,CADkB;AAMjCC,IAAAA,KAAK,EAAE,CAN0B;AAOjCC,IAAAA,SAAS,EAAE;AAPsB,GAAD,CAAlC;;AAUA,QAAMC,OAAO,GAAG,MAAM;AACpB;AACAJ,IAAAA,QAAQ,CAACD,KAAK,KAAK,EACjB,GAAGA,KADc;AAEjBG,MAAAA,KAAK,EAAE,CAACH,KAAK,CAACG,KAAN,GAAc,CAAf,IAAoBH,KAAK,CAACE,aAAN,CAAoBI,MAF9B;AAGjBF,MAAAA,SAAS,EAAE;AAHM,KAAL,CAAN,CAAR;AAKD,GAPD;;AASA,QAAMG,OAAO,GAAG,MAAM;AACpB;AACAN,IAAAA,QAAQ,CAACD,KAAK,KAAK,EACjB,GAAGA,KADc;AAEjBG,MAAAA,KAAK,EACH,CAACH,KAAK,CAACG,KAAN,GAAc,CAAd,GAAkBH,KAAK,CAACE,aAAN,CAAoBI,MAAvC,IACAN,KAAK,CAACE,aAAN,CAAoBI,MAJL;AAKjBF,MAAAA,SAAS,EAAE;AALM,KAAL,CAAN,CAAR;AAOD,GATD;;AAWA,QAAMI,mBAAmB,GACvBR,KAAK,CAACI,SAAN,KAAoB,WAApB,GACI,eADJ,GAEIJ,KAAK,CAACI,SAAN,KAAoB,WAApB,GACA,gBADA,GAEA,EALN;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,mBAAnC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACI,SAAN,KAAoB,WAApB,IAAmCJ,KAAK,CAACI,SAAN,KAAoB,WAA3D,EAAwE;AACtEK,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,MAAAA,QAAQ,CAACD,KAAK,KAAK,EACjB,GAAGA,KADc;AAEjBI,QAAAA,SAAS,EAAEJ,KAAK,CAACI,SAAN,KAAoB,WAApB,GAAkC,MAAlC,GAA2C;AAFrC,OAAL,CAAN,CAAR;AAID,KAND,MAMO,IAAIJ,KAAK,CAACI,SAAN,KAAoB,MAApB,IAA8BJ,KAAK,CAACI,SAAN,KAAoB,MAAtD,EAA8D;AACnEK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,MAAAA,QAAQ,CAACD,KAAK,KAAK,EACjB,GAAGA,KADc;AAEjBI,QAAAA,SAAS,EAAE;AAFM,OAAL,CAAN,CAAR;AAID;AACF,GAdQ,EAcN,CAACJ,KAAK,CAACI,SAAP,CAdM,CAAT;AAgBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAME;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEF,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAUE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEL,KAAK,CAACG,KADb;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,UAAU,EAAEK,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAER,KAAK,CAACE,aAAN,CAAoBF,KAAK,CAACG,KAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CAVF,CADF;AAwBD,CA/ED;;AAiFA,eAAeJ,QAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport CarouselSet from \"./carouselSet\";\nimport \"./carousel.css\";\nimport Slide from \"./slide\";\n\nconst Carousel = () => {\n  const [state, setState] = useState({\n    restaurantSet: [\n      [\"rest1\", \"rest2\", \"rest3\"],\n      [\"rest4\", \"rest5\", \"rest6\"],\n      [\"rest7\", \"rest8\", \"rest9\"]\n    ],\n    index: 0,\n    direction: null\n  });\n\n  const nextSet = () => {\n    // set state\n    setState(state => ({\n      ...state,\n      index: (state.index + 1) % state.restaurantSet.length,\n      direction: \"next-fake\"\n    }));\n  };\n\n  const prevSet = () => {\n    // set state\n    setState(state => ({\n      ...state,\n      index:\n        (state.index - 1 + state.restaurantSet.length) %\n        state.restaurantSet.length,\n      direction: \"prev-fake\"\n    }));\n  };\n\n  const transitionClassName =\n    state.direction === \"next-fake\"\n      ? \"setTransition\"\n      : state.direction === \"prev-fake\"\n      ? \"prevTransition\"\n      : \"\";\n  console.log(\"transitionClassName\", transitionClassName);\n\n  useEffect(() => {\n    if (state.direction === \"next-fake\" || state.direction === \"prev-fake\") {\n      console.log(\"set state to next or prev\");\n      setState(state => ({\n        ...state,\n        direction: state.direction === \"next-fake\" ? \"next\" : \"prev\"\n      }));\n    } else if (state.direction === \"next\" || state.direction === \"prev\") {\n      console.log(\"set state to null\");\n      setState(state => ({\n        ...state,\n        direction: null\n      }));\n    }\n  }, [state.direction]);\n\n  return (\n    <div className=\"carousel\">\n      <p className=\"header\">Suggested for You</p>\n\n      <button className=\"prevCarouselBtn\" onClick={prevSet}>\n        &#8249;\n      </button>\n      <button className=\"nextCarouselBtn\" onClick={nextSet}>\n        &#8250;\n      </button>\n\n      <TransitionGroup>\n        <CSSTransition\n          key={state.index}\n          timeout={1000}\n          classNames={transitionClassName}\n        >\n          <div className=\"carouselSet\">\n            <CarouselSet viewSet={state.restaurantSet[state.index]} />\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}