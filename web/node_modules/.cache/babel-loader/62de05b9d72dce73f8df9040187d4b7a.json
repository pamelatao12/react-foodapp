{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/web/src/signedOut/createAccount.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport firebase from \"firebase\";\nimport { AuthenticationContext } from \"../common/authentication/context\";\nimport { Link } from \"react-router-dom\";\nimport CreateAccountConfirmation from \"./createAccountConfirmation\";\n\nconst CreateAccount = () => {\n  const [input, setInput] = useState({});\n  const {\n    createAccount\n  } = useContext(AuthenticationContext);\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  };\n\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastNameError, setLastNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      first,\n      last,\n      email,\n      password\n    } = input;\n    console.log(first, last, email, password);\n\n    if (!password || password.length < 6) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n    }\n\n    if (!first) {\n      console.log(\"firstname set to true\");\n      setFirstNameError(true);\n    } else {\n      setFirstNameError(false);\n    }\n\n    if (!last) {\n      setLastNameError(true);\n    } else {\n      setLastNameError(false);\n    }\n\n    if (!email) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    }\n\n    if (passwordError || firstNameError || lastNameError || emailError) {\n      return;\n    }\n\n    console.log(firstNameError);\n    await createAccount(email, password);\n    setAccountCreated(true);\n  };\n\n  const [pwInput, setPwInput] = useState(\"password\");\n  const [viewSetting, setViewSetting] = useState(\"ðŸ™ˆ\");\n\n  const handleViewPassword = () => {\n    pwInput === \"password\" ? setPwInput(\"text\") : setPwInput(\"password\");\n    viewSetting === \"ðŸ™ˆ\" ? setViewSetting(\"ðŸ™‰\") : setViewSetting(\"ðŸ™ˆ\");\n  };\n\n  const handleFirstNameInput = () => {\n    if (!firstNameError) {\n      return React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"First Name*\"), React.createElement(\"input\", {\n        className: styles.textbox,\n        type: \"text\",\n        name: \"first\",\n        value: input.first ? input.first : \"\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"First Name*\"), React.createElement(\"input\", {\n        className: styles.textboxError,\n        type: \"text\",\n        name: \"first\",\n        value: input.first ? input.first : \"\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"*First name is a required field\"));\n    }\n  };\n\n  const handleLastNameInput = () => {\n    if (!lastNameError) {\n      return React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Last Name*\"), React.createElement(\"input\", {\n        className: styles.textbox,\n        type: \"text\",\n        name: \"last\",\n        value: input.last ? input.last : \"\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Last Name*\"), React.createElement(\"input\", {\n        className: styles.textboxError,\n        type: \"text\",\n        name: \"last\",\n        value: input.last ? input.last : \"\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"*Last name is a required field\"));\n    }\n  };\n\n  const handleEmailInput = () => {\n    if (!emailError) {\n      return React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Email*\"), React.createElement(\"input\", {\n        className: styles.textbox,\n        type: \"email\",\n        name: \"email\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Email*\"), React.createElement(\"input\", {\n        className: styles.textboxError,\n        type: \"email\",\n        name: \"email\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"*Email is a required field\"));\n    }\n  };\n\n  const handlePasswordLength = () => {\n    if (passwordError) {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Password*\"), React.createElement(\"input\", {\n        className: styles.textboxError,\n        type: pwInput,\n        name: \"password\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.span,\n        onClick: handleViewPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, viewSetting)), React.createElement(\"div\", {\n        className: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"*Password must be at least 6 characters\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Password*\"), React.createElement(\"input\", {\n        className: styles.textbox,\n        type: pwInput,\n        name: \"password\",\n        onChange: handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.span,\n        onClick: handleViewPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, viewSetting));\n    }\n  };\n\n  const [accountCreated, setAccountCreated] = useState(false);\n  const createAccountForm = React.createElement(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login\",\n    className: styles.backButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.backBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"\\u2190\"), \"Back\")), React.createElement(\"div\", {\n    className: styles.createAccountHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"div\", {\n    className: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, handleFirstNameInput(), handleLastNameInput(), handleEmailInput(), handlePasswordLength()), React.createElement(\"button\", {\n    className: styles.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Create\"));\n  return React.createElement(\"div\", {\n    className: styles.bodyWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, accountCreated ? React.createElement(CreateAccountConfirmation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }) : createAccountForm));\n};\n\nexport default CreateAccount;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/signedOut/createAccount.jsx"],"names":["React","useContext","useState","styles","firebase","AuthenticationContext","Link","CreateAccountConfirmation","CreateAccount","input","setInput","createAccount","handleInputChange","e","currentTarget","name","value","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","passwordError","setPasswordError","handleSubmit","preventDefault","first","last","email","password","console","log","length","setAccountCreated","pwInput","setPwInput","viewSetting","setViewSetting","handleViewPassword","handleFirstNameInput","label","textbox","textboxError","errorMessage","handleLastNameInput","handleEmailInput","handlePasswordLength","span","accountCreated","createAccountForm","form","backButton","backBtn","createAccountHeader","inputWrapper","button","bodyWrapper","signIn"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport firebase from \"firebase\";\nimport { AuthenticationContext } from \"../common/authentication/context\";\nimport { Link } from \"react-router-dom\";\nimport CreateAccountConfirmation from \"./createAccountConfirmation\";\n\nconst CreateAccount = () => {\n  const [input, setInput] = useState({});\n  const { createAccount } = useContext(AuthenticationContext);\n\n  const handleInputChange = e => {\n    setInput({\n      ...input,\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  };\n\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastNameError, setLastNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const { first, last, email, password } = input;\n\n    console.log(first, last, email, password);\n\n    if (!password || password.length < 6) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n    }\n\n    if (!first) {\n      console.log(\"firstname set to true\");\n      setFirstNameError(true);\n    } else {\n      setFirstNameError(false);\n    }\n\n    if (!last) {\n      setLastNameError(true);\n    } else {\n      setLastNameError(false);\n    }\n\n    if (!email) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    }\n\n    if (passwordError || firstNameError || lastNameError || emailError) {\n      return;\n    }\n    console.log(firstNameError);\n\n    await createAccount(email, password);\n    setAccountCreated(true);\n  };\n\n  const [pwInput, setPwInput] = useState(\"password\");\n  const [viewSetting, setViewSetting] = useState(\"ðŸ™ˆ\");\n\n  const handleViewPassword = () => {\n    pwInput === \"password\" ? setPwInput(\"text\") : setPwInput(\"password\");\n    viewSetting === \"ðŸ™ˆ\" ? setViewSetting(\"ðŸ™‰\") : setViewSetting(\"ðŸ™ˆ\");\n  };\n\n  const handleFirstNameInput = () => {\n    if (!firstNameError) {\n      return (\n        <div className={styles.input}>\n          <label className={styles.label}>First Name*</label>\n          <input\n            className={styles.textbox}\n            type=\"text\"\n            name=\"first\"\n            value={input.first ? input.first : \"\"}\n            onChange={handleInputChange}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className={styles.input}>\n            <label className={styles.label}>First Name*</label>\n            <input\n              className={styles.textboxError}\n              type=\"text\"\n              name=\"first\"\n              value={input.first ? input.first : \"\"}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className={styles.errorMessage}>\n            *First name is a required field\n          </div>\n        </>\n      );\n    }\n  };\n\n  const handleLastNameInput = () => {\n    if (!lastNameError) {\n      return (\n        <div className={styles.input}>\n          <label className={styles.label}>Last Name*</label>\n          <input\n            className={styles.textbox}\n            type=\"text\"\n            name=\"last\"\n            value={input.last ? input.last : \"\"}\n            onChange={handleInputChange}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className={styles.input}>\n            <label className={styles.label}>Last Name*</label>\n            <input\n              className={styles.textboxError}\n              type=\"text\"\n              name=\"last\"\n              value={input.last ? input.last : \"\"}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className={styles.errorMessage}>\n            *Last name is a required field\n          </div>\n        </>\n      );\n    }\n  };\n\n  const handleEmailInput = () => {\n    if (!emailError) {\n      return (\n        <div className={styles.input}>\n          <label className={styles.label}>Email*</label>\n          <input\n            className={styles.textbox}\n            type=\"email\"\n            name=\"email\"\n            onChange={handleInputChange}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className={styles.input}>\n            <label className={styles.label}>Email*</label>\n            <input\n              className={styles.textboxError}\n              type=\"email\"\n              name=\"email\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className={styles.errorMessage}>*Email is a required field</div>\n        </>\n      );\n    }\n  };\n\n  const handlePasswordLength = () => {\n    if (passwordError) {\n      return (\n        <>\n          <div className={styles.input}>\n            <label className={styles.label}>Password*</label>\n            <input\n              className={styles.textboxError}\n              type={pwInput}\n              name=\"password\"\n              onChange={handleInputChange}\n            />\n            <span className={styles.span} onClick={handleViewPassword}>\n              {viewSetting}\n            </span>\n          </div>\n          <div className={styles.errorMessage}>\n            *Password must be at least 6 characters\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <div className={styles.input}>\n          <label className={styles.label}>Password*</label>\n          <input\n            className={styles.textbox}\n            type={pwInput}\n            name=\"password\"\n            onChange={handleInputChange}\n          />\n          <span className={styles.span} onClick={handleViewPassword}>\n            {viewSetting}\n          </span>\n        </div>\n      );\n    }\n  };\n\n  const [accountCreated, setAccountCreated] = useState(false);\n\n  const createAccountForm = (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <Link to=\"/login\" className={styles.backButton}>\n        <button className={styles.backBtn}>\n          <span>&#8592;</span>Back\n        </button>\n      </Link>\n      <div className={styles.createAccountHeader}>Create Account</div>\n      <div className={styles.inputWrapper}>\n        {handleFirstNameInput()}\n        {handleLastNameInput()}\n        {handleEmailInput()}\n        {handlePasswordLength()}\n      </div>\n      <button className={styles.button} type=\"submit\">\n        Create\n      </button>\n    </form>\n  );\n\n  return (\n    <div className={styles.bodyWrapper}>\n      <div className={styles.signIn}>\n        {accountCreated ? <CreateAccountConfirmation /> : createAccountForm}\n      </div>\n    </div>\n  );\n};\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}