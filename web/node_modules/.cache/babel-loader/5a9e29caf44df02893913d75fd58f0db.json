{"ast":null,"code":"var _jsxFileName = \"/Users/pamelatao/my-app/web/src/restaurantCard.js\";\nimport React, { useState } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\n\nconst RestaurantCard = ({\n  details,\n  index\n}) => {\n  const [reviews, setReviews] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const fetchReviews = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/reviews?id=${details.id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      });\n      const responseJson = await response.json();\n      setLoading(false);\n      console.log(responseJson);\n      setReviews(responseJson.reviews);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  if (!reviews) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n  const triggerElement = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"titleButtonWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"eventTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, index, \". \", details.name), React.createElement(\"div\", {\n    className: \"restaurantActionButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"addButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    className: \"heartButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u2665\"))), React.createElement(\"div\", {\n    className: \"ratingAddressWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    restaurantRating: details.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"reviewCount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, details.review_count)), React.createElement(\"div\", {\n    className: \"priceTags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, details.price), details.price && React.createElement(\"div\", {\n    className: \"separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, String.fromCharCode(5867)), React.createElement(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, details.categories[0].title))), React.createElement(\"ul\", {\n    className: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, details.phone && \"(\" + details.phone.substring(2, 5) + \") \" + details.phone.substring(5, 8) + \"-\" + details.phone.substring(8)), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, details.location.address1), React.createElement(\"li\", {\n    className: \"addressList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, details.location.city))), React.createElement(\"div\", {\n    className: \"seeReviewsButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Reviews \\u25BF\"));\n  return React.createElement(Collapsible, {\n    classParentString: \"collapsibleRestaurant\",\n    trigger: triggerElement,\n    triggerTagName: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"collapsibleRestaurantContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, reviews[0].text), React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, reviews[1].text), React.createElement(\"p\", {\n    className: \"reviewCollapsibleContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, reviews[2].text)));\n};\n\nexport default RestaurantCard;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/restaurantCard.js"],"names":["React","useState","Collapsible","Rating","RestaurantCard","details","index","reviews","setReviews","undefined","loading","setLoading","fetchReviews","response","fetch","id","headers","Accept","responseJson","json","console","log","error","useEffect","triggerElement","name","rating","review_count","price","String","fromCharCode","categories","title","phone","substring","location","address1","city","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./restaurantCard.css\";\nimport Collapsible from \"react-collapsible\";\nimport Rating from \"./rating\";\n\nconst RestaurantCard = ({ details, index }) => {\n  const [reviews, setReviews] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const fetchReviews = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:4000/reviews?id=${details.id}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }\n      );\n      const responseJson = await response.json();\n      setLoading(false);\n      console.log(responseJson);\n      setReviews(responseJson.reviews);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  if (!reviews) {\n    return <div />;\n  }\n\n  const triggerElement = (\n    <>\n      <div className=\"titleButtonWrapper\">\n        <h2 className=\"eventTitle\">\n          {index}. {details.name}\n        </h2>\n        <div className=\"restaurantActionButtons\">\n          <button className=\"addButton\">+</button>\n          <button className=\"heartButton\">&#9829;</button>\n        </div>\n      </div>\n      <div className=\"ratingAddressWrapper\">\n        <div>\n          <div className=\"rating\">\n            <Rating restaurantRating={details.rating} />\n            <div className=\"reviewCount\">{details.review_count}</div>\n          </div>\n          <div className=\"priceTags\">\n            <div className=\"price\">{details.price}</div>\n            {details.price && (\n              <div className=\"separator\">{String.fromCharCode(5867)}</div>\n            )}\n            {/* todo: display categories separated by comma. use join(\", \")? */}\n            <div className=\"tags\">{details.categories[0].title}</div>\n          </div>\n        </div>\n        <ul className=\"address\">\n          <li className=\"addressList\">\n            {details.phone &&\n              \"(\" +\n                details.phone.substring(2, 5) +\n                \") \" +\n                details.phone.substring(5, 8) +\n                \"-\" +\n                details.phone.substring(8)}\n          </li>\n          <li className=\"addressList\">{details.location.address1}</li>\n          <li className=\"addressList\">{details.location.city}</li>\n          {/*use zip code to get neighborhood*/}\n        </ul>\n      </div>\n      <div className=\"seeReviewsButton\">Reviews &#9663;</div>\n    </>\n  );\n\n  return (\n    <Collapsible\n      classParentString=\"collapsibleRestaurant\"\n      trigger={triggerElement}\n      triggerTagName=\"div\"\n    >\n      <div className=\"collapsibleRestaurantContent\">\n        <p className=\"reviewCollapsibleContent\">{reviews[0].text}</p>\n        <p className=\"reviewCollapsibleContent\">{reviews[1].text}</p>\n        <p className=\"reviewCollapsibleContent\">{reviews[2].text}</p>\n      </div>\n    </Collapsible>\n  );\n};\n\nexport default RestaurantCard;\n"]},"metadata":{},"sourceType":"module"}