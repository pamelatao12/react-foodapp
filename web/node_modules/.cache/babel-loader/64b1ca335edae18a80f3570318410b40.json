{"ast":null,"code":"import _defineProperty from\"/Users/pamelatao/my-app/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/pamelatao/my-app/web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/pamelatao/my-app/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import styles from\"./searchBar.module.css\";import{useHistory}from\"react-router-dom\";var SearchBar=function SearchBar(){// 1. set up searchKeywordState\n// 2. set a onChange handler to call setState method ^ when input is changed\nvar history=useHistory();var _useState=useState({term:\"\",location:\"\"}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleSearch=function handleSearch(e){if(state.location===\"\"){e.preventDefault();}else{history.push({pathname:\"/search\",search:\"?term=\".concat(state.term,\"&location=\").concat(state.location)});}};var onInputChange=function onInputChange(event){event.persist();setState(function(state){return _objectSpread({},state,_defineProperty({},event.target.name,event.target.value));});};return React.createElement(\"div\",{className:styles.searchBar},React.createElement(\"form\",{className:styles.searchBarForm,onSubmit:handleSearch},React.createElement(\"p\",{className:styles.searchFor,style:{borderRadius:\"10px 0px 0px 10px\"}},\"Find\"),React.createElement(\"input\",{name:\"term\",id:styles.searchKeyword,type:\"text\",placeholder:\"Sushi... burgers... pasta...\",onChange:onInputChange,value:state.term}),React.createElement(\"p\",{id:styles.searchIn,className:styles.searchFor,style:{borderRadius:\"0px 0px 0px 0px\"}},\"in\"),React.createElement(\"input\",{name:\"location\",id:styles.searchLocation,type:\"text\",placeholder:\"New York City\",onChange:onInputChange,value:state.location}),React.createElement(\"button\",{type:\"search\",id:styles.searchBtn},\"Search\")));};export default SearchBar;","map":{"version":3,"sources":["/Users/pamelatao/my-app/web/src/searchBar.js"],"names":["React","useState","styles","useHistory","SearchBar","history","term","location","state","setState","handleSearch","e","preventDefault","push","pathname","search","onInputChange","event","persist","target","name","value","searchBar","searchBarForm","searchFor","borderRadius","searchKeyword","searchIn","searchLocation","searchBtn"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB;AACA;AACA,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CAHsB,cAKIF,QAAQ,CAAC,CACjCK,IAAI,CAAE,EAD2B,CAEjCC,QAAQ,CAAE,EAFuB,CAAD,CALZ,wCAKfC,KALe,eAKRC,QALQ,eAUtB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxB,GAAIH,KAAK,CAACD,QAAN,GAAmB,EAAvB,CAA2B,CACzBI,CAAC,CAACC,cAAF,GACD,CAFD,IAEO,CACLP,OAAO,CAACQ,IAAR,CAAa,CACXC,QAAQ,CAAE,SADC,CAEXC,MAAM,iBAAWP,KAAK,CAACF,IAAjB,sBAAkCE,KAAK,CAACD,QAAxC,CAFK,CAAb,EAID,CACF,CATD,CAWA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7BA,KAAK,CAACC,OAAN,GACAT,QAAQ,CAAC,SAAAD,KAAK,0BACTA,KADS,oBAEXS,KAAK,CAACE,MAAN,CAAaC,IAFF,CAESH,KAAK,CAACE,MAAN,CAAaE,KAFtB,IAAN,CAAR,CAID,CAND,CAQA,MACE,4BAAK,SAAS,CAAEnB,MAAM,CAACoB,SAAvB,EACE,4BAAM,SAAS,CAAEpB,MAAM,CAACqB,aAAxB,CAAuC,QAAQ,CAAEb,YAAjD,EACE,yBACE,SAAS,CAAER,MAAM,CAACsB,SADpB,CAEE,KAAK,CAAE,CAAEC,YAAY,oBAAd,CAFT,SADF,CAOE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAEvB,MAAM,CAACwB,aAFb,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,8BAJd,CAKE,QAAQ,CAAEV,aALZ,CAME,KAAK,CAAER,KAAK,CAACF,IANf,EAPF,CAeE,yBACE,EAAE,CAAEJ,MAAM,CAACyB,QADb,CAEE,SAAS,CAAEzB,MAAM,CAACsB,SAFpB,CAGE,KAAK,CAAE,CAAEC,YAAY,kBAAd,CAHT,OAfF,CAsBE,6BACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAEvB,MAAM,CAAC0B,cAFb,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,eAJd,CAKE,QAAQ,CAAEZ,aALZ,CAME,KAAK,CAAER,KAAK,CAACD,QANf,EAtBF,CA8BE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAEL,MAAM,CAAC2B,SAAjC,WA9BF,CADF,CADF,CAwCD,CArED,CAuEA,cAAezB,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./searchBar.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchBar = () => {\n  // 1. set up searchKeywordState\n  // 2. set a onChange handler to call setState method ^ when input is changed\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    term: \"\",\n    location: \"\"\n  });\n\n  const handleSearch = e => {\n    if (state.location === \"\") {\n      e.preventDefault();\n    } else {\n      history.push({\n        pathname: \"/search\",\n        search: `?term=${state.term}&location=${state.location}`\n      });\n    }\n  };\n\n  const onInputChange = event => {\n    event.persist();\n    setState(state => ({\n      ...state,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return (\n    <div className={styles.searchBar}>\n      <form className={styles.searchBarForm} onSubmit={handleSearch}>\n        <p\n          className={styles.searchFor}\n          style={{ borderRadius: `10px 0px 0px 10px` }}\n        >\n          Find\n        </p>\n        <input\n          name=\"term\"\n          id={styles.searchKeyword}\n          type=\"text\"\n          placeholder=\"Sushi... burgers... pasta...\"\n          onChange={onInputChange}\n          value={state.term}\n        />\n        <p\n          id={styles.searchIn}\n          className={styles.searchFor}\n          style={{ borderRadius: `0px 0px 0px 0px` }}\n        >\n          in\n        </p>\n        <input\n          name=\"location\"\n          id={styles.searchLocation}\n          type=\"text\"\n          placeholder=\"New York City\"\n          onChange={onInputChange}\n          value={state.location}\n        />\n        <button type=\"search\" id={styles.searchBtn}>\n          Search\n        </button>\n        {/* add dropdown \"results for...\" click to search instead of actual search\n    button */}\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}